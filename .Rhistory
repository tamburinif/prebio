### set this to /your/path/to/prebio2
setwd("/Users/Fiona/scg4_fiona/prebio2/prebio")
# color palette
# FOS, Control
my_pal <- c("#D55E00", "#0072B2")
names(my_pal) <- c("FOS", "Control")
prebio_meta_all <- read.table("metadata/prebio_meta.tsv", sep = '\t', header = T, quote="\"")
# set FOS/Control grouping
prebio_meta_all$group <- ifelse(startsWith(as.character(prebio_meta_all$patient_id), '303'), "FOS", "Control")
prebio_meta_all$group <- factor(prebio_meta_all$group, levels = c("FOS", "Control"))
# format columns as date
prebio_meta_all$date <- as.Date(prebio_meta_all$date)
prebio_meta_all$trx <- as.Date(prebio_meta_all$trx)
# set factor levels for downstream plots
prebio_meta_all$patient_id <- factor(prebio_meta_all$patient_id, levels = mixedsort(unique(prebio_meta_all$patient_id)))
# metadata for sequenced samples only
prebio_meta <- filter(prebio_meta_all, sequenced_status == T)
prebio_meta <- prebio_meta[mixedorder(unique(prebio_meta$sequencing_id)), ]
# required packages
library(ggplot2)
# # library(ggrepel)
# # library(RColorBrewer)
# library(plyr)
library(dplyr)
# library(zoo)
library(reshape2)
# library(scales)
library(gtools)
### Read sample metadata -- which stools were collected/sequenced
prebio_meta_all <- read.table("metadata/prebio_meta.tsv", sep = '\t', header = T, quote="\"")
# set FOS/Control grouping
prebio_meta_all$group <- ifelse(startsWith(as.character(prebio_meta_all$patient_id), '303'), "FOS", "Control")
prebio_meta_all$group <- factor(prebio_meta_all$group, levels = c("FOS", "Control"))
# format columns as date
prebio_meta_all$date <- as.Date(prebio_meta_all$date)
prebio_meta_all$trx <- as.Date(prebio_meta_all$trx)
# set factor levels for downstream plots
prebio_meta_all$patient_id <- factor(prebio_meta_all$patient_id, levels = mixedsort(unique(prebio_meta_all$patient_id)))
# metadata for sequenced samples only
prebio_meta <- filter(prebio_meta_all, sequenced_status == T)
prebio_meta <- prebio_meta[mixedorder(unique(prebio_meta$sequencing_id)), ]
remove <- c("Unclassified", "Homo sapiens")
brack_sp_filt <- brack_sp[!rownames(brack_sp) %in% remove,]
brack_g_filt <- brack_g[!rownames(brack_g) %in% remove,]
brack_sp_perc <- sweep(brack_sp_filt, 2, colSums(brack_sp_filt), "/")
brack_g_perc <- sweep(brack_g_filt, 2, colSums(brack_g_filt), "/")
brack_sp <- read.table("input_data/bracken_species_reads.txt", sep = '\t', header = T, quote = "")
brack_g <- read.table("input_data/bracken_genus_reads.txt", sep = '\t', header = T, quote = "")
# relative abundance normalize -- classified/no human only
remove <- c("Unclassified", "Homo sapiens")
brack_sp_filt <- brack_sp[!rownames(brack_sp) %in% remove,]
brack_g_filt <- brack_g[!rownames(brack_g) %in% remove,]
brack_sp_perc <- sweep(brack_sp_filt, 2, colSums(brack_sp_filt), "/")
brack_g_perc <- sweep(brack_g_filt, 2, colSums(brack_g_filt), "/")
brack_sp <- read.table("input_data/bracken_species_reads.txt", sep = '\t', header = T, quote = "")
brack_g <- read.table("input_data/bracken_genus_reads.txt", sep = '\t', header = T, quote = "")
# relative abundance normalize -- classified/no human only
remove <- c("Unclassified", "Homo sapiens")
brack_sp_filt <- brack_sp[!rownames(brack_sp) %in% remove,]
brack_g_filt <- brack_g[!rownames(brack_g) %in% remove,]
brack_sp_perc <- sweep(brack_sp_filt, 2, colSums(brack_sp_filt), "/")
brack_g_perc <- sweep(brack_g_filt, 2, colSums(brack_g_filt), "/")
# remove P83 sample from all taxonomy tables
brack_sp_perc[, "P83"] <- NULL
brack_g_perc[, "P83"] <- NULL
# set order
brack_sp_perc <- brack_sp_perc[, mixedorder(unique(prebio_meta$sequencing_id))]
brack_g_perc <- brack_g_perc[, mixedorder(unique(prebio_meta$sequencing_id))]
write.table(brack_sp_perc, "input_data/bracken_species_perc.txt", sep = "\t", row.names = F, quote = F)
write.table(brack_g_perc, "input_data/bracken_genus_perc.txt", sep = "\t", row.names = F, quote = F)
write.table(brack_sp_perc, "input_data/bracken_species_perc.txt", sep = "\t", row.names = T, quote = F)
write.table(brack_g_perc, "input_data/bracken_genus_perc.txt", sep = "\t", row.names = T, quote = F)
brack_sp_perc <- read.table("input_data/bracken_species_perc.txt", sep = '\t', header = T, quote = "")
brack_g_perc <- read.table("input_data/bracken_genus_perc.txt", sep = '\t', header = T, quote = "")
head(brack_sp_perc)
colSums(brack_sp_perc)
# TO DO: change filepaths/organize for portability
# TO DO: remove P83 and re-save
### Read sample metadata -- which stools were collected/sequenced
prebio_meta_all <- read.table("metadata/prebio_meta.tsv", sep = '\t', header = T, quote="\"")
# set FOS/Control grouping
prebio_meta_all$group <- ifelse(startsWith(as.character(prebio_meta_all$patient_id), '303'), "FOS", "Control")
prebio_meta_all$group <- factor(prebio_meta_all$group, levels = c("FOS", "Control"))
# format columns as date
prebio_meta_all$date <- as.Date(prebio_meta_all$date)
prebio_meta_all$trx <- as.Date(prebio_meta_all$trx)
# set factor levels for downstream plots
prebio_meta_all$patient_id <- factor(prebio_meta_all$patient_id, levels = mixedsort(unique(prebio_meta_all$patient_id)))
# metadata for sequenced samples only
prebio_meta <- filter(prebio_meta_all, sequenced_status == T)
prebio_meta <- prebio_meta[mixedorder(unique(prebio_meta$sequencing_id)), ]
### Read taxonomic classification data
## bracken species read counts including unclassifed
brack_sp_perc <- read.table("input_data/bracken_species_perc.txt", sep = '\t', header = T, quote = "")
brack_g_perc <- read.table("input_data/bracken_genus_perc.txt", sep = '\t', header = T, quote = "")
## Read short chain fatty acid measurements
# repeated measurements may 2019
scfa2_f <- "/Users/Fiona/Google Drive/Bhatt lab/Projects/Prebiotic/Prebio2/prebio_scfa_may19.txt"
scfa2 <- read.table(scfa2_f, sep = '\t', header = T)
scfa2[is.na(scfa2)] <- 0
scfa2_f <- "input_data/prebio_scfa_may19.txt"
scfa2 <- read.table(scfa2_f, sep = '\t', header = T)
scfa2[is.na(scfa2)] <- 0
library(plyr)
unload(plyr)
